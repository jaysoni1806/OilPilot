<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="8" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-11T14:59:01 IST" name="Suite" finished-at="2024-04-11T15:00:47 IST" duration-ms="105993">
    <groups>
    </groups>
    <test started-at="2024-04-11T14:59:01 IST" name="OilPilot" finished-at="2024-04-11T15:00:47 IST" duration-ms="105993">
      <class name="testPackage.LoginTest">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:testPackage.LoginTest@63376bed]" started-at="2024-04-11T14:58:48 IST" name="prerequisite" finished-at="2024-04-11T14:59:01 IST" duration-ms="13349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method is-config="true" signature="initializeExtentReport()[pri:0, instance:testPackage.LoginTest@63376bed]" started-at="2024-04-11T14:59:01 IST" name="initializeExtentReport" finished-at="2024-04-11T14:59:02 IST" duration-ms="399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeExtentReport -->
        <test-method is-config="true" signature="assignObjectForClass()[pri:0, instance:testPackage.LoginTest@63376bed]" started-at="2024-04-11T14:59:02 IST" name="assignObjectForClass" finished-at="2024-04-11T14:59:02 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assignObjectForClass -->
        <test-method is-config="true" signature="seperateCase()[pri:0, instance:testPackage.LoginTest@63376bed]" started-at="2024-04-11T14:59:02 IST" name="seperateCase" finished-at="2024-04-11T14:59:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seperateCase -->
        <test-method signature="validLoginTest(java.util.Map)[pri:0, instance:testPackage.LoginTest@63376bed]" started-at="2024-04-11T14:59:02 IST" name="validLoginTest" description="Test Valid Login" data-provider="LoginTestData" finished-at="2024-04-11T14:59:24 IST" duration-ms="22028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{username=jay.soni+manager@openxcell.com, password=QA@12345}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginTest -->
        <test-method is-config="true" signature="flush()[pri:0, instance:testPackage.LoginTest@63376bed]" started-at="2024-04-11T15:00:47 IST" name="flush" finished-at="2024-04-11T15:00:47 IST" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testPackage.LoginTest@63376bed]" started-at="2024-04-11T15:00:48 IST" name="closeBrowser" finished-at="2024-04-11T15:00:48 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [We have successfully updated the Tank.] but found [We have successfully updated the Well.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [We have successfully updated the Tank.] but found [We have successfully updated the Well.]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.closeBrowser(TestBase.java:100)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:344)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testPackage.LoginTest -->
      <class name="testPackage.WellAssetsTest">
        <test-method is-config="true" signature="assignObjectForClass()[pri:0, instance:testPackage.WellAssetsTest@298a5e20]" started-at="2024-04-11T14:59:24 IST" name="assignObjectForClass" finished-at="2024-04-11T14:59:24 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assignObjectForClass -->
        <test-method is-config="true" signature="seperateCase()[pri:0, instance:testPackage.WellAssetsTest@298a5e20]" started-at="2024-04-11T14:59:24 IST" name="seperateCase" finished-at="2024-04-11T14:59:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seperateCase -->
        <test-method signature="createWell()[pri:0, instance:testPackage.WellAssetsTest@298a5e20]" started-at="2024-04-11T14:59:24 IST" name="createWell" description="Test create well assets." finished-at="2024-04-11T15:00:09 IST" duration-ms="44728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWell -->
        <test-method is-config="true" signature="seperateCase()[pri:0, instance:testPackage.WellAssetsTest@298a5e20]" started-at="2024-04-11T15:00:09 IST" name="seperateCase" finished-at="2024-04-11T15:00:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seperateCase -->
        <test-method signature="editWell()[pri:1, instance:testPackage.WellAssetsTest@298a5e20]" started-at="2024-04-11T15:00:09 IST" name="editWell" description="Test edit well assets." finished-at="2024-04-11T15:00:28 IST" duration-ms="19187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editWell -->
        <test-method is-config="true" signature="seperateCase()[pri:0, instance:testPackage.WellAssetsTest@298a5e20]" started-at="2024-04-11T15:00:28 IST" name="seperateCase" finished-at="2024-04-11T15:00:28 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seperateCase -->
        <test-method signature="deleteWell()[pri:2, instance:testPackage.WellAssetsTest@298a5e20]" started-at="2024-04-11T15:00:28 IST" name="deleteWell" description="Test delete well assets." finished-at="2024-04-11T15:00:47 IST" duration-ms="18598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteWell -->
      </class> <!-- testPackage.WellAssetsTest -->
    </test> <!-- OilPilot -->
  </suite> <!-- Suite -->
</testng-results>
